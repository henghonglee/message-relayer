// Code generated by MockGen. DO NOT EDIT.
// Source: example.com/messagerelay/network (interfaces: NetworkSocket)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	message "example.com/messagerelay/message"
	gomock "github.com/golang/mock/gomock"
)

// MockNetworkSocket is a mock of NetworkSocket interface.
type MockNetworkSocket struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkSocketMockRecorder
}

// MockNetworkSocketMockRecorder is the mock recorder for MockNetworkSocket.
type MockNetworkSocketMockRecorder struct {
	mock *MockNetworkSocket
}

// NewMockNetworkSocket creates a new mock instance.
func NewMockNetworkSocket(ctrl *gomock.Controller) *MockNetworkSocket {
	mock := &MockNetworkSocket{ctrl: ctrl}
	mock.recorder = &MockNetworkSocketMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetworkSocket) EXPECT() *MockNetworkSocketMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockNetworkSocket) Read() (message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].(message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockNetworkSocketMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockNetworkSocket)(nil).Read))
}
